{"version":3,"sources":["utils/helpers.js","state/posts/actions.js","state/navigation/actions.js","components/Card/index.jsx","components/List/index.jsx","components/Detail/index.jsx","App.js","state/posts/reducer.js","state/navigation/reducer.js","state/index.js","index.js"],"names":["module","exports","formatPosts","posts","reduce","list","_ref","data","id","undefined","setPostRead","post","Object","assign","visited","patchPosts","updatedList","dismissPost","postId","filteredList","LOAD_POSTS","READ_POST","DISMISS_POST","DISMISS_ALL","CLEAR_DETAIL","SET_MOBILE","memo","handleRead","handleDismiss","react_default","a","createElement","className","author","moment","Date","created_utc","fromNow","thumbnail","href","onClick","concat","url","src","title","num_comments","List","_this","props","readPost","document","getElementById","classList","add","setTimeout","handleDismissAll","dismissAll","_this2","this","console","log","keyPosts","keys","length","map","k","key","components_Card","Component","connect","state","dispatch","type","payload","Detail","_this$props","showDetail","isMobile","clearDetail","Fragment","_ref$posts","selectedPostId","navigation","App","checkIfMobile","DATA","children","loadPosts","test","navigator","userAgent","setMobile","components_Detail","components_List","initialState","rootReducer","combineReducers","arguments","action","objectSpread","middlewares","window","devToolsExtension","push","store","createStore","reducer","compose","apply","ReactDOM","render","es","src_App_0"],"mappings":"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","file":"static/js/main.45713973.chunk.js","sourcesContent":["const formatPosts = posts =>\n  posts.reduce((list, { data }) => {\n    list[data.id] = list[data.id] === undefined && data\n    return list\n  }, {})\n\nconst patchPosts = (posts, post) => {\n  const updatedList = Object.assign({}, posts)\n  updatedList[post.id] = post\n  return updatedList\n}\n\nconst setPostRead = post => Object.assign({}, post, { visited: true })\n\nconst dismissPost = (posts, postId) => {\n  const filteredList = Object.assign({}, posts)\n  delete filteredList[postId]\n  return filteredList\n}\n\nmodule.exports = {\n  formatPosts,\n  setPostRead,\n  patchPosts,\n  dismissPost\n}\n","export const LOAD_POSTS = 'LOAD_POSTS'\nexport const READ_POST = 'READ_POST'\nexport const DISMISS_POST = 'DISMISS_POST'\nexport const DISMISS_ALL = 'DISMISS_ALL'\nexport const CLEAR_DETAIL = 'CLEAR_DETAIL'\n\nexport function loadPosts(posts) {\n  return {\n    type: LOAD_POSTS,\n    payload: {\n      posts\n    }\n  }\n}\nexport function readPost(id) {\n  return {\n    type: READ_POST,\n    payload: {\n      postId: id\n    }\n  }\n}\nexport function dismissPost(postId) {\n  return {\n    type: DISMISS_POST,\n    payload: {\n      postId: postId\n    }\n  }\n}\nexport function dismissAll() {\n  return {\n    type: DISMISS_ALL,\n  }\n}\nexport function clearDetail() {\n  return {\n    type: CLEAR_DETAIL,\n  }\n}\n","export const SET_MOBILE = 'SET_MOBILE'\n\nexport function setMobile(isMobile) {\n  return {\n    type: SET_MOBILE,\n    payload: {\n      isMobile\n    }\n  }\n}\n","import React, { memo } from 'react'\nimport moment from 'moment'\nimport './style.css'\n\nconst Card = ({ post, handleRead, handleDismiss }) => (\n  <div className='card'>\n    <div className='card-header'>\n      {!post.visited && <span className='card__unvisited' />}\n      <span className='card-header__author'>{post.author}</span>\n      <span className='card-header__date'>\n        {moment(new Date(post.created_utc * 1000)).fromNow()}\n      </span>\n    </div>\n    <div className='card-content'>\n      <div className='card-content__tumbnail'>\n        {post.thumbnail && (\n          <a\n            href='#'\n            onClick={`document.location=${post.url};return false;`}\n          >\n            <img src={post.thumbnail} />\n          </a>\n        )}\n        <p\n          className={\n            post.thumbnail\n              ? 'card-content__title'\n              : 'card-content__title no-image'\n          }\n          onClick={() => handleRead(post.id)}\n        >\n          {post.title}\n        </p>\n      </div>\n      <span\n        className='card-content__arrow'\n        onClick={() => handleRead(post.id)}\n      />\n    </div>\n    <div className='card-footer'>\n      <div\n        className='card-footer-container__dismiss'\n        onClick={() => handleDismiss(post.id)}\n      >\n        <span className='card-footer-button__dismiss' />\n        <span>Dismiss post</span>\n      </div>\n      <span className='card-footer__comments'>{`${\n        post.num_comments\n      } comments`}</span>\n    </div>\n  </div>\n)\n\nexport default memo(Card)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { readPost, dismissPost, dismissAll } from '../../state/posts/actions'\nimport Card from '../Card'\nimport './style.css'\n\nclass List extends Component {\n  handleRead = id => this.props.readPost(id)\n  handleDismiss = id => {\n    document.getElementById(`card-${id}`).classList.add('dismiss')\n    setTimeout(() => {\n      this.props.dismissPost(id)\n    }, 300)\n  }\n  handleDismissAll = () => this.props.dismissAll()\n\n  render() {\n    const { posts } = this.props\n    console.log({posts})\n    const keyPosts = Object.keys(posts)\n    return (\n      <div className='list-container'>\n        {keyPosts.length ? (\n          keyPosts.map(k => {\n            const { id } = posts[k]\n            return (\n              <div key={id} id={`card-${id}`}>\n                <Card\n                  post={posts[k]}\n                  handleRead={this.handleRead}\n                  handleDismiss={this.handleDismiss}\n                />\n              </div>\n            )\n          })\n        ) : (\n          <h3 className='list-container__empty-text'>Reddit Posts</h3>\n        )}\n        <button\n          className='list-container-button__dismiss-all'\n          onClick={this.handleDismissAll}\n        >\n          Dismiss All\n        </button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.list\n})\n\nconst mapDispatchToProps = dispatch => ({\n  readPost: postId => dispatch(readPost(postId)),\n  dismissPost: postId => dispatch(dismissPost(postId)),\n  dismissAll: () => dispatch(dismissAll())\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(List)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { clearDetail } from '../../state/posts/actions'\nimport './style.css'\n\nclass Detail extends Component {\n  render() {\n    const { post, showDetail, isMobile, clearDetail } = this.props\n    return (\n      <div className='detail-container'>\n        {post && showDetail && (\n          <>\n            {isMobile && (\n              <span\n                className='detail-button__back'\n                onClick={() => clearDetail()}\n              />\n            )}\n            <h2>{post.author}</h2>\n            {post.thumbnail && (\n              <img className='detail-image' src={post.thumbnail} />\n            )}\n            <p>{post.title}</p>\n          </>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  posts: { list, selectedPostId, showDetail },\n  navigation: { isMobile }\n}) => ({\n  post: list[selectedPostId],\n  showDetail,\n  isMobile\n})\nconst mapDispatchToProps = dispatch => ({\n  clearDetail: () => dispatch(clearDetail())\n})\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Detail)\n","import React, { Component } from 'react'\nimport DATA from './data/top.json'\nimport { connect } from 'react-redux'\nimport { loadPosts } from './state/posts/actions'\nimport { setMobile } from './state/navigation/actions'\nimport { formatPosts } from './utils/helpers'\nimport { List, Detail } from './components'\nimport './App.css'\n\nclass App extends Component {\n  componentDidMount() {\n    this.checkIfMobile()\n    const posts = formatPosts(DATA.data.children)\n    this.props.loadPosts(posts)\n  }\n  checkIfMobile() {\n    const isMobile = /iPhone|iPod|Android/i.test(navigator.userAgent)\n    isMobile && this.props.setMobile(true)\n  }\n  render() {\n    const { showDetail, isMobile } = this.props\n    return (\n      <div className='wrapper'>\n        {!isMobile ? (\n          <>\n            <List />\n            <Detail />\n          </>\n        ) : showDetail ? (\n          <Detail />\n        ) : (\n          <List />\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  showDetail: state.posts.showDetail,\n  isMobile: state.navigation.isMobile\n})\n\nconst mapDispatchToProps = dispatch => ({\n  loadPosts: posts => dispatch(loadPosts(posts)),\n  setMobile: isMobile => dispatch(setMobile(isMobile))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import {\n  LOAD_POSTS,\n  READ_POST,\n  DISMISS_POST,\n  DISMISS_ALL,\n  CLEAR_DETAIL\n} from './actions'\nimport { setPostRead, patchPosts, dismissPost } from '../../utils/helpers'\nconst initialState = {\n  list: {},\n  selectedPostId: null,\n  showDetail: false\n}\n\nexport const posts = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_POSTS:\n      return {\n        ...state,\n        list: action.payload.posts\n      }\n    case READ_POST:\n      return {\n        list: patchPosts(\n          state.list,\n          setPostRead(state.list[action.payload.postId])\n        ),\n        selectedPostId: action.payload.postId,\n        showDetail: true\n      }\n    case DISMISS_POST:\n      return {\n        ...state,\n        list: dismissPost(state.list, action.payload.postId)\n      }\n    case CLEAR_DETAIL:\n      return {\n        ...state,\n        showDetail: false\n      }\n    case DISMISS_ALL:\n      return initialState\n    default:\n      return state\n  }\n}\n","import { SET_MOBILE } from './actions'\n\nconst initialState = {\n  isMobile: false\n}\n\nexport const navigation = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_MOBILE:\n      return {\n        isMobile: true\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { posts,  } from './posts/reducer'\nimport { navigation } from './navigation/reducer'\n\nconst rootReducer = combineReducers({\n  posts,\n  navigation\n})\n\nexport default rootReducer\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport { createStore, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './state'\n\nimport './index.css'\n\nconst middlewares = []\n\nif (window.devToolsExtension) {\n  middlewares.push(window.devToolsExtension())\n}\n\nconst store = createStore(reducer, compose(...middlewares))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}